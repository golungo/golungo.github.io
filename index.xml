<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A fast and simple MongoDB driver for Go on Lungo - A fast and simple MongoDB driver for Go</title><link>https://lungo.dev/</link><description>Recent content in A fast and simple MongoDB driver for Go on Lungo - A fast and simple MongoDB driver for Go</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 08 Feb 2023 14:42:49 +0400</lastBuildDate><atom:link href="https://lungo.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Example repository</title><link>https://lungo.dev/posts/example/</link><pubDate>Thu, 09 Feb 2023 15:42:49 +0400</pubDate><guid>https://lungo.dev/posts/example/</guid><description>I published the repositoty with lungo usage example.</description></item><item><title>About</title><link>https://lungo.dev/about/</link><pubDate>Wed, 08 Feb 2023 14:42:49 +0400</pubDate><guid>https://lungo.dev/about/</guid><description>TODO: Write About Info</description></item><item><title>Documentation</title><link>https://lungo.dev/docs/</link><pubDate>Wed, 08 Feb 2023 14:42:49 +0400</pubDate><guid>https://lungo.dev/docs/</guid><description>Here is an example how to use lungo. We will try to build a couple of endpoints:
Get Category with populated items inside Get Item by ID with populated category inside Overall project structure will look like this: - example - - main.go - - models - - - Category.go - - - Item.go - - handlers - - - GetCategoryById.go - - - GetItemById.go - - go.mod - - go.</description></item><item><title>Hello World</title><link>https://lungo.dev/posts/hello-world/</link><pubDate>Wed, 08 Feb 2023 14:42:49 +0400</pubDate><guid>https://lungo.dev/posts/hello-world/</guid><description>The lungo was born.</description></item></channel></rss>